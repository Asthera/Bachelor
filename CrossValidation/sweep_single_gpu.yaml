arch: resnet18
comment: ''
criterion: cross-entropy
device: cuda
dropout: false
dropout_rate: 0.8
early_stopping: true
epochs: 40
experiment_class: b_line
fc_layer_size: 512
folds_path: metadata_folds/kkui-lung-bline-lumify:latest/video
img_dir: /home/vn126ks/nas_storage_synology/APVV_Lung/revision_8/
init_transform:
- TransformResize(600)
- TransformPad(600)
is_validating: true
learning_rate: 0.0001
method: grid
metric:
  goal: minimize
  name: val_f1
name: with_cross_val_with_aug
number_of_classes: 2
optimizer: adam
output_transform: none
parameters:
  batch_size:
    values:
    - 32
  fold:
    values:
    - fold_0
    - fold_1
    - fold_2
    - fold_3
    - fold_4
  transform:
    values:
    - - None
    - - T.RandomApply([T.RandomAffine(degrees=0, shear=(-15, 15, -15, 15))], p=0.5)
    - - T.RandomApply([T.RandomAffine(degrees=0, translate=(0.15, 0.15))], p=0.5)
    - - T.RandomApply([T.RandomAffine(degrees=(-25, 25))], p=0.5)
    - - CT.RandomNoiseWithFV(p=0.5, fv=(0.1, 0.5))
    - - CT.RandomSaltAndPepperNoise(p=0.5, density=(0.01, 0.03))
    - - MT.RandGaussianNoise(prob=0.5, mean=0, std=0.002)
    - - MT.RandGaussianNoise(prob=0.5, mean=0, std=0.1)
    - - T.RandomApply([MT.SavitzkyGolaySmooth(window_length=5, order=2)], p=0.5)
    - - T.RandomApply([MT.SavitzkyGolaySmooth(window_length=3, order=1)], p=0.5)
    - - T.RandomVerticalFlip(p=0.5)
    - - T.RandomHorizontalFlip(p=0.5)
    - - MT.RandZoom(prob=0.5, min_zoom=1.0, max_zoom=1.2)
    - - MT.RandZoom(prob=0.5, min_zoom=0.8, max_zoom=1.0)
    - - T.RandomResizedCrop(size=(600, 600), scale=(0.5, 1.0), ratio=(3.0 / 4.0, 4.0
        / 3.0), antialias=True)
    - - T.RandomResizedCrop(size=(600, 600), scale=(0.7, 1.0), ratio=(3.0 / 4.0, 4.0
        / 3.0), antialias=True)
    - - T.RandomResizedCrop(size=(600, 600), scale=(0.2, 1.0), ratio=(3.0 / 4.0, 4.0
        / 3.0), antialias=True)
    - - T.RandomApply([T.ColorJitter(contrast=(0.5, 1.5))], p=0.5)
    - - MT.RandSmoothFieldAdjustContrast(prob=0.5, spatial_size=(600, 600), rand_size=(5,
        5))
    - - MT.RandSmoothFieldAdjustContrast(prob=0.5, spatial_size=(600, 600), rand_size=(2,
        2))
    - - MT.RandSmoothFieldAdjustContrast(prob=0.5, spatial_size=(600, 600), rand_size=(10,
        10))
    - - CT.RandomContrastByMultiply(p=0.5, multiplier=(0.75, 0.75))
    - - T.RandomApply([T.ColorJitter(brightness=(0.5, 1.5))], p=0.5)
    - - CT.RandomBrightnessByAdd(p=0.5, delta=(0.15, 0.25))
    - - CT.RandomBrightnessByAdd(p=0.5, delta=(0.05, 0.15))
    - - T.RandomApply([T.ColorJitter(saturation=0.5)], p=0.5)
    - - T.RandomApply([T.GaussianBlur(kernel_size=5, sigma=(0.1, 2.0))], p=0.5)
    - - MT.RandGaussianNoise(prob=0.5, mean=0, std=0.001)
    - - MT.RandGaussianNoise(prob=0.5, mean=0, std=0.01)
    - - MT.RandGaussianSharpen(prob=0.5, alpha=(1.0, 5.0))
    - - MT.RandGaussianSharpen(prob=0.5)
    - - T.RandomAdjustSharpness(sharpness_factor=2.0, p=0.5)
    - - T.RandomAdjustSharpness(sharpness_factor=1.5, p=0.5)
    - - T.RandomAdjustSharpness(sharpness_factor=2.5, p=0.5)
    - - MT.RandShiftIntensity(prob=0.5, offsets=(-0.1, 0.1))
    - - MT.RandShiftIntensity(prob=0.5, offsets=(-0.05, 0.05))
    - - MT.RandShiftIntensity(prob=0.5, offsets=(0.1, 0.1))
    - - T.RandomErasing(p=0.5, scale=(0.02, 0.33), ratio=(0.3, 3.3), value=0, inplace=False)
    - - T.RandomErasing(p=0.5, scale=(0.02, 0.33), ratio=(0.3, 3.3), value='random',
        inplace=False)
  yaml_file:
    values:
    - sweep_single_gpu.yaml
patience: 5
pretrained: true
program: training.py
save_weights: true
saving_only_best_one_weight_val_loss: true
testing_with_best_val_loss: true
val_dist: 0.2
weights_dir: /home/vn126ks/nas_storage_synology/_experiments_output/weights/
