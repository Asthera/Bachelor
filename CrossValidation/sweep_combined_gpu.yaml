program: training.py
name: "with_cross_val_with_aug"
method: grid

# Metric to optimize
metric:
  goal: minimize
  name: val_f1

# Hyperparameters
parameters:
  transform:
    values:
      - - "None"

      - - "RandomResizedCrop(510)"
        - "RandomVerticalFlip()"
        - "RandomRotation(degrees=15)"
        - "ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1)"
        - "RandomAffine(degrees=15, translate=(0.1, 0.1), scale=(0.8, 1.2), shear=10)"
        - "Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))"

      - - "RandomResizedCrop(510)"
        - "RandomVerticalFlip()"
        - "RandomRotation(degrees=15)"
        - "RandomAffine(degrees=15, translate=(0.1, 0.1), scale=(0.8, 1.2), shear=10)"
        - "Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))"

      - - "RandomResizedCrop(510)"
        - "RandomVerticalFlip()"
        - "RandomRotation(degrees=15)"
        - "RandomAffine(degrees=15, translate=(0.1, 0.1), scale=(0.8, 1.2), shear=10)"
        - "RandGaussianNoise(prob=0.5, mean=0, std=0.0001)"
        - "Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))"

      - - "RandomVerticalFlip()"
        - "RandomRotation(degrees=10)"
        - "RandomAffine(degrees=10, translate=(0.2, 0.2), scale=(0.8, 1.2), shear=10)"
        - "ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1)"
        - "RandGaussianNoise(prob=0.5, mean=0.4, std=0.5)"
        - "Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))"

      - - "RandGaussianNoise(prob=0.5, mean=0.3, std=0.3)"
        - "RandAdjustContrast(prob=0.5, gamma=(0.5, 4.5))"
        - "RandHistogramShift(num_control_points=10, prob=0.5)"
        - "RandBiasField(degree=3, coeff_range=(0.0, 0.1), prob=0.5)"
        - "RandFlip(prob=0.5, spatial_axis=1)"
        - "RandGibbsNoise(prob=0.5, alpha=(0.4, 1.0)"
        - "RandZoom(prob=0.5, min_zoom=0.8, max_zoom=1.4)"
        - "RandRotate(range_x=10.0, prob=0.5, keep_size=True))"
        - "RandGaussianSmooth(sigma_x=(0.25, 1.5), sigma_y=(0.25, 1.5), prob=0.8)"
        - 'RandAffine(prob=0.5)'
        - "RandGridDistortion(num_cells=5, prob=0.5, distort_limit=(-0.03, 0.03))"
        - "Rand2DElastic(spacing=(20,20), magnitude_range=(1,2), prob=0.4)"
        - "RandCoarseDropout(holes=5, spatial_size=(30,30), fill_value=0,prob=0.6)"
        - "RandGaussianNoise(prob=0.5, mean=0.3, std=0.3)"
        - "NormalizeIntensity()"

      - - "RandGaussianNoise(prob=0.5, mean=0.3, std=0.3)"
        - "RandAdjustContrast(prob=0.5, gamma=(0.5, 4.5))"
        - "RandHistogramShift(num_control_points=10, prob=0.5)"
        - "RandBiasField(degree=3, coeff_range=(0.0, 0.1), prob=0.5)"
        - "RandFlip(prob=0.5, spatial_axis=1)"
        - "RandGibbsNoise(prob=0.5, alpha=(0.4, 1.0)"
        - "RandZoom(prob=0.5, min_zoom=0.8, max_zoom=1.4)"
        - "RandRotate(range_x=10.0, prob=0.5, keep_size=True))"
        - "RandGaussianSmooth(sigma_x=(0.25, 1.5), sigma_y=(0.25, 1.5), prob=0.8)"
        - 'RandAffine(prob=0.5)'
        - "RandGridDistortion(num_cells=5, prob=0.5, distort_limit=(-0.03, 0.03))"
        - "Rand2DElastic(spacing=(20,20), magnitude_range=(1,2), prob=0.4)"
        - "RandCoarseDropout(holes=5, spatial_size=(30,30), fill_value=0,prob=0.6)"
        - "RandGaussianNoise(prob=0.5, mean=0.3, std=0.3)"

      - - "RandGaussianNoise(prob=0.5, mean=0.3, std=0.3)"
        - "RandFlip(prob=0.5, spatial_axis=1)"
        - "RandZoom(prob=0.5, min_zoom=0.8, max_zoom=1.4)"
        - "NormalizeIntensity()"

      - - "RandGridDistortion(num_cells=5, prob=0.5, distort_limit=(-0.03, 0.03))"
        - "Rand2DElastic(spacing=(20,20), magnitude_range=(1,2), prob=0.4)"

      - - "RandGaussianNoise(prob=0.5, mean=0.3, std=0.3)"
        - "RandGibbsNoise(prob=0.5, alpha=(0.4, 1.0))"
        - "RandGaussianSmooth(sigma_x=(0.25, 1.5), sigma_y=(0.25, 1.5), prob=0.8"
        - "NormalizeIntensity()"



  fold:
    values: ['fold_0', 'fold_1', 'fold_2', 'fold_3', 'fold_4']
  batch_size:
    values: [32]
  yaml_file:
    values: ["sweep_combined_gpu.yaml"]

# Paths and directories
folds_path: "metadata_folds/kkui-lung-bline-lumify:latest/video"
img_dir: "/home/vn126ks/nas_storage_synology/APVV_Lung/revision_8/"
weights_dir: "/home/vn126ks/nas_storage_synology/_experiments_output/weights/"

# Model configuration
optimizer: "adam"
learning_rate: 0.0001
criterion: "cross-entropy"
fc_layer_size: 512
number_of_classes: 2
device: "cuda"
arch: "resnet18"
pretrained: True
dropout: False
dropout_rate: 0.8


# Training process
patience: 5
early_stopping: True
epochs: 40
is_validating: True
val_dist: 0.2
save_weights: True

# Testing process
testing_with_best_val_loss: True
saving_only_best_one_weight_val_loss: True

# Transformations
init_transform: ["TransformResize(600)", "TransformPad(600)"]
output_transform: "none"

# Experiment details
experiment_class: "b_line"
comment: ""